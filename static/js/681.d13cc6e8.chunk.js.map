{"version":3,"file":"static/js/681.d13cc6e8.chunk.js","mappings":"8LAiCA,UA5BgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,KAAKL,GACLM,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,EACzB,GACJ,GAAE,CAACN,IACJO,QAAQC,IAAIV,IAGV,+BACE,0BACoB,IAAjBA,EAAMW,SAAgB,qEACtBX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASZ,EAApB,EAAoBA,GAApB,OACT,2BACE,wBAAKW,KACL,uBAAIC,MAFGZ,EADA,QASlB,C,+LC9BKa,EAAW,gCACXC,EAAU,2CAGVC,EAAS,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAD7C,cACVG,EADU,OAGVC,EAAiBD,EAAIE,KAAKC,QAAQV,KACtC,YACE,MAAO,CAAEV,GADmC,EAA3CA,GACYqB,MAD+B,EAAvCA,MACeC,YADwB,EAAhCA,YACqBC,aADW,EAAnBA,aAE1B,IANa,kBAQTL,GARS,2CAAH,qDAYTM,EAAO,mCAAG,WAAMxB,GAAN,uFACOgB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bb,EAA9B,YAAoCc,IAD3C,cACVW,EADU,yBAGPA,EAASN,MAHF,2CAAH,sDAOPhB,EAAU,mCAAG,WAAMH,GAAN,yFACQgB,EAAAA,EAAAA,IAAA,UACpBH,EADoB,iBACHb,EADG,oBACWc,IAFnB,cACXY,EADW,OAIXC,EAAUD,EAAWP,KAAKC,QAAQV,KAAI,YAC1C,MAAO,CAAEC,OAD8D,EAA1BA,OAC5BC,QADsD,EAAlBA,QAC3BZ,GAD6C,EAATA,GAE/D,IANgB,kBAOV2B,GAPU,2CAAH,sDAWVC,EAAQ,mCAAG,WAAM5B,GAAN,uFACQgB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bb,EAA9B,oBAA4Cc,IADpD,cACTe,EADS,yBAERA,EAASV,MAFD,2CAAH,sDAMRW,EAAU,mCAAG,WAAMC,GAAN,uFACQf,EAAAA,EAAAA,IAAA,UACpBH,EADoB,wBACIC,EADJ,4DAC+DiB,IAFvE,cACXC,EADW,yBAKVA,EAAWb,KAAKC,SALN,2CAAH,qD","sources":["components/Reviews.jsx","servises.api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { getReviews } from '../servises.api';\n\nimport { useParams } from 'react-router-dom';\nconst Reviews = () => {\n  const [revie, setRevie] = useState([]);\n\n  const { id } = useParams();\n  useEffect(() => {\n    getReviews(id)\n      .then(setRevie)\n      .catch(function (error) {\n        console.log('Error: ' + error);\n      });\n  }, [id]);\n  console.log(revie);\n\n  return (\n    <>\n      <ul>\n        {revie.length === 0 && <p>We don`t have information about the revie</p>}\n        {revie.map(({ author, content, id }) => (\n          <li key={id}>\n            <h2>{author}</h2>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=d2aad9d08af0864f29f140d50d0d9bda';\n\n// Trending movies -> HomePage\nconst getMovies = async () => {\n  const res = await axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`);\n  // console.log(res.data.results);\n  const trendingMovies = res.data.results.map(\n    ({ id, title, poster_path, vote_average }) => {\n      return { id, title, poster_path, vote_average };\n    }\n  );\n  return trendingMovies;\n};\n\n// Search by id -> MovieDetailsPage\nconst getById = async id => {\n  let respById = await axios.get(`${BASE_URL}movie/${id}?${API_KEY}`);\n\n  return respById.data;\n};\n\n//Movie REVIEW by id -> Review\nconst getReviews = async id => {\n  const resReviews = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?${API_KEY}`\n  );\n  const reviews = resReviews.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n  return reviews;\n};\n\n// CAST review by id -> Cast\nconst getCasts = async id => {\n  const resCasts = await axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`);\n  return resCasts.data;\n};\n\n// Movie by name/query -> MoviesPage\nconst getByQuery = async query => {\n  const resByQuery = await axios.get(\n    `${BASE_URL}search/movie?${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resByQuery.data.results;\n};\n\nexport { getMovies, getById, getReviews, getCasts, getByQuery };\n"],"names":["useState","revie","setRevie","id","useParams","useEffect","getReviews","then","catch","error","console","log","length","map","author","content","BASE_URL","API_KEY","getMovies","axios","res","trendingMovies","data","results","title","poster_path","vote_average","getById","respById","resReviews","reviews","getCasts","resCasts","getByQuery","query","resByQuery"],"sourceRoot":""}