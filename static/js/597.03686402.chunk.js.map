{"version":3,"file":"static/js/597.03686402.chunk.js","mappings":"uMA2CA,UAtCa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAASH,GACNI,MAAK,SAAAC,GAAI,OAAIN,EAASM,EAAKC,KAAlB,IACTC,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,EACzB,GACJ,GAAE,CAACR,IACJS,QAAQC,IAAIZ,IAGV,gCACoB,IAAjBA,EAAMa,SAAgB,qEACvB,wBACGb,EAAMc,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,aAAcf,EAA3C,EAA2CA,GAA3C,OACT,2BACE,gBACEgB,IAAKF,EACLG,MAAM,MACNC,IACmB,OAAjBH,EACII,EADJ,yCAEsCJ,MAI1C,uBAAID,KACJ,uCAAeD,OAZRb,EADA,QAmBlB,C,+LCxCKoB,EAAW,gCACXC,EAAU,2CAGVC,EAAS,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAD7C,cACVG,EADU,OAGVC,EAAiBD,EAAInB,KAAKqB,QAAQd,KACtC,YACE,MAAO,CAAEZ,GADmC,EAA3CA,GACY2B,MAD+B,EAAvCA,MACeC,YADwB,EAAhCA,YACqBC,aADW,EAAnBA,aAE1B,IANa,kBAQTJ,GARS,2CAAH,qDAYTK,EAAO,mCAAG,WAAM9B,GAAN,uFACOuB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BpB,EAA9B,YAAoCqB,IAD3C,cACVU,EADU,yBAGPA,EAAS1B,MAHF,2CAAH,sDAOP2B,EAAU,mCAAG,WAAMhC,GAAN,yFACQuB,EAAAA,EAAAA,IAAA,UACpBH,EADoB,iBACHpB,EADG,oBACWqB,IAFnB,cACXY,EADW,OAIXC,EAAUD,EAAW5B,KAAKqB,QAAQd,KAAI,YAC1C,MAAO,CAAEuB,OAD8D,EAA1BA,OAC5BC,QADsD,EAAlBA,QAC3BpC,GAD6C,EAATA,GAE/D,IANgB,kBAOVkC,GAPU,2CAAH,sDAWV/B,EAAQ,mCAAG,WAAMH,GAAN,uFACQuB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BpB,EAA9B,oBAA4CqB,IADpD,cACTgB,EADS,yBAERA,EAAShC,MAFD,2CAAH,sDAMRiC,EAAU,mCAAG,WAAMC,GAAN,uFACQhB,EAAAA,EAAAA,IAAA,UACpBH,EADoB,wBACIC,EADJ,4DAC+DkB,IAFvE,cACXC,EADW,yBAKVA,EAAWnC,KAAKqB,SALN,2CAAH,qD","sources":["components/Cast.jsx","servises.api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport pic from './picture/pict.png';\nimport { getCasts } from '../servises.api';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n\n  const { id } = useParams();\n  useEffect(() => {\n    getCasts(id)\n      .then(data => setCasts(data.cast))\n      .catch(function (error) {\n        console.log('Error: ' + error);\n      });\n  }, [id]);\n  console.log(casts);\n\n  return (\n    <>\n      {casts.length === 0 && <p>We don`t have information about the cast</p>}\n      <ul>\n        {casts.map(({ character, original_name, profile_path, id }) => (\n          <li key={id}>\n            <img\n              alt={original_name}\n              width=\"140\"\n              src={\n                profile_path === null\n                  ? pic\n                  : `https://image.tmdb.org/t/p/w400${profile_path}`\n              }\n            />\n\n            <p>{original_name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=d2aad9d08af0864f29f140d50d0d9bda';\n\n// Trending movies -> HomePage\nconst getMovies = async () => {\n  const res = await axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`);\n  // console.log(res.data.results);\n  const trendingMovies = res.data.results.map(\n    ({ id, title, poster_path, vote_average }) => {\n      return { id, title, poster_path, vote_average };\n    }\n  );\n  return trendingMovies;\n};\n\n// Search by id -> MovieDetailsPage\nconst getById = async id => {\n  let respById = await axios.get(`${BASE_URL}movie/${id}?${API_KEY}`);\n\n  return respById.data;\n};\n\n//Movie REVIEW by id -> Review\nconst getReviews = async id => {\n  const resReviews = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?${API_KEY}`\n  );\n  const reviews = resReviews.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n  return reviews;\n};\n\n// CAST review by id -> Cast\nconst getCasts = async id => {\n  const resCasts = await axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`);\n  return resCasts.data;\n};\n\n// Movie by name/query -> MoviesPage\nconst getByQuery = async query => {\n  const resByQuery = await axios.get(\n    `${BASE_URL}search/movie?${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resByQuery.data.results;\n};\n\nexport { getMovies, getById, getReviews, getCasts, getByQuery };\n"],"names":["useState","casts","setCasts","id","useParams","useEffect","getCasts","then","data","cast","catch","error","console","log","length","map","character","original_name","profile_path","alt","width","src","pic","BASE_URL","API_KEY","getMovies","axios","res","trendingMovies","results","title","poster_path","vote_average","getById","respById","getReviews","resReviews","reviews","author","content","resCasts","getByQuery","query","resByQuery"],"sourceRoot":""}