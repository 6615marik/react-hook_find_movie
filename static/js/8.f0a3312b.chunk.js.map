{"version":3,"file":"static/js/8.f0a3312b.chunk.js","mappings":"kMA0DA,UArDe,WAEb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,UAAY,GAE3CC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAGMI,EAAoB,SAAAC,GAExBR,EAD4B,KAATQ,EAAc,CAAEC,MAAOD,GAAS,CAAC,EAErD,EAmBD,OAbAE,EAAAA,EAAAA,YAAU,WACHhB,IAGLiB,EAAAA,EAAAA,IAAWjB,GACRkB,MAAK,SAAAhB,GACAA,EAASC,EAAUD,GAAUiB,MAAM,gBACxC,IACAC,OAAM,SAAUC,GACfV,QAAQC,IAAI,UAAYS,EACzB,GACJ,GAAE,CAACrB,KAGF,iCACE,kBAAMsB,SAnBY,SAAAC,GACpBA,EAAEC,iBACFvB,EAAeM,EAChB,EAgBG,WACE,kBAAOkB,KAAK,OAAOC,MAAOnB,EAAaoB,SA5BzB,SAAAJ,GAClBV,EAAkBU,EAAEK,cAAcF,MACnC,KA2BK,mBAAQD,KAAK,SAAb,wBAEF,mBACCvB,GACCA,EAAO2B,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMzB,GAAhD,SACGqB,EAAMK,OAASL,EAAMhB,QAFjBgB,EAAME,GADD,MASvB,C,+LCxDKI,EAAW,gCACXC,EAAU,2CAGVC,EAAS,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAD7C,cACVG,EADU,OAGVC,EAAiBD,EAAIE,KAAKC,QAAQd,KACtC,YACE,MAAO,CAAEG,GADmC,EAA3CA,GACYG,MAD+B,EAAvCA,MACeS,YADwB,EAAhCA,YACqBC,aADW,EAAnBA,aAE1B,IANa,kBAQTJ,GARS,2CAAH,qDAYTK,EAAO,mCAAG,WAAMd,GAAN,uFACOO,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BJ,EAA9B,YAAoCK,IAD3C,cACVU,EADU,yBAGPA,EAASL,MAHF,2CAAH,sDAOPM,EAAU,mCAAG,WAAMhB,GAAN,yFACQO,EAAAA,EAAAA,IAAA,UACpBH,EADoB,iBACHJ,EADG,oBACWK,IAFnB,cACXY,EADW,OAIXC,EAAUD,EAAWP,KAAKC,QAAQd,KAAI,YAC1C,MAAO,CAAEsB,OAD8D,EAA1BA,OAC5BC,QADsD,EAAlBA,QAC3BpB,GAD6C,EAATA,GAE/D,IANgB,kBAOVkB,GAPU,2CAAH,sDAWVG,EAAQ,mCAAG,WAAMrB,GAAN,uFACQO,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BJ,EAA9B,oBAA4CK,IADpD,cACTiB,EADS,yBAERA,EAASZ,MAFD,2CAAH,sDAMRzB,EAAU,mCAAG,WAAMF,GAAN,uFACQwB,EAAAA,EAAAA,IAAA,UACpBH,EADoB,wBACIC,EADJ,4DAC+DtB,IAFvE,cACXwC,EADW,yBAKVA,EAAWb,KAAKC,SALN,2CAAH,qD","sources":["page/Movies.jsx","servises.api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getByQuery } from '../servises.api';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nconst Movies = () => {\n  // const [value, setValue] = useState('');\n  const [submitValue, setSubmitValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query') || '';\n\n  const location = useLocation();\n  console.log(location);\n  const ChangeInput = e => {\n    updateQueryString(e.currentTarget.value);\n  };\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { query: name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const onSubmitInput = e => {\n    e.preventDefault();\n    setSubmitValue(searchQuery);\n  };\n  useEffect(() => {\n    if (!submitValue) {\n      return;\n    }\n    getByQuery(submitValue)\n      .then(movies => {\n        if (movies ? setMovies(movies) : alert('Enter a movie'));\n      })\n      .catch(function (error) {\n        console.log('Error: ' + error);\n      });\n  }, [submitValue]);\n\n  return (\n    <>\n      <form onSubmit={onSubmitInput}>\n        <input type=\"text\" value={searchQuery} onChange={ChangeInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div></div>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=d2aad9d08af0864f29f140d50d0d9bda';\n\n// Trending movies -> HomePage\nconst getMovies = async () => {\n  const res = await axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`);\n  // console.log(res.data.results);\n  const trendingMovies = res.data.results.map(\n    ({ id, title, poster_path, vote_average }) => {\n      return { id, title, poster_path, vote_average };\n    }\n  );\n  return trendingMovies;\n};\n\n// Search by id -> MovieDetailsPage\nconst getById = async id => {\n  let respById = await axios.get(`${BASE_URL}movie/${id}?${API_KEY}`);\n\n  return respById.data;\n};\n\n//Movie REVIEW by id -> Review\nconst getReviews = async id => {\n  const resReviews = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?${API_KEY}`\n  );\n  const reviews = resReviews.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n  return reviews;\n};\n\n// CAST review by id -> Cast\nconst getCasts = async id => {\n  const resCasts = await axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`);\n  return resCasts.data;\n};\n\n// Movie by name/query -> MoviesPage\nconst getByQuery = async query => {\n  const resByQuery = await axios.get(\n    `${BASE_URL}search/movie?${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resByQuery.data.results;\n};\n\nexport { getMovies, getById, getReviews, getCasts, getByQuery };\n"],"names":["useState","submitValue","setSubmitValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","console","log","updateQueryString","name","query","useEffect","getByQuery","then","alert","catch","error","onSubmit","e","preventDefault","type","value","onChange","currentTarget","map","movie","to","id","state","from","title","BASE_URL","API_KEY","getMovies","axios","res","trendingMovies","data","results","poster_path","vote_average","getById","respById","getReviews","resReviews","reviews","author","content","getCasts","resCasts","resByQuery"],"sourceRoot":""}